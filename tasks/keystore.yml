---
- name: Create the keystore if it doesn't exist yet
  ansible.builtin.command: >
    /usr/share/elasticsearch/bin/elasticsearch-keystore create
  args:
    creates: /etc/elasticsearch/elasticsearch.keystore

- name: Check if bootstrap password is set
  ansible.builtin.command: >
    /usr/share/elasticsearch/bin/elasticsearch-keystore list
  register: _es_keystore
  changed_when: false

- name: Create Bootstrap password for elastic user
  ansible.builtin.command: /usr/share/elasticsearch/bin/elasticsearch-keystore add -x 'bootstrap.password'
  args:
    stdin: "{{ es_api_basic_auth_password }}"
  when:
    - _es_keystore is defined
    - ('bootstrap.password' not in _es_keystore.stdout_lines)
  no_log: true
  notify: Restart ElasticSearch

- name: Add keystore entries
  ansible.builtin.command: /usr/share/elasticsearch/bin/elasticsearch-keystore add -x -f {{ item.key }}
  args:
    stdin: "{{ item.value }}"
  loop: "{{ es_keystore_entries }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.key not in _es_keystore.stdout_lines
  notify: Restart ElasticSearch

- name: Restart ElasticSearch now to ensure the Bootstrap password for elastic user is set
  ansible.builtin.meta: "flush_handlers"

- name: Wait for ElasticSearch to be running
  ansible.builtin.wait_for:
    host: localhost
    port: "{{ es_http_port }}"
